#
# https://github.com/bitsofproof/supernode
# http://bitsofproof.com:8082/display/BPD/Build+and+run+the+Server
#

# Compile:
# --extra-vars "compile=yes"

#
# manus manum lavat
# java -server -classpath server/target/classes/:server/target/lib/* com.bitsofproof.supernode.main.Main leveldb production
#
# java -jar server/target/bitsofproof-server-1.1-SNAPSHOT.jar leveldb production BCSAPI server

# supernode/core/ImplementBCSAPI.java (129):
# session = connection.createSession (true, Session.AUTO_ACKNOWLEDGE);
#

#
# TODO: docker isolation
#
---
- hosts: all
  vars_files:
    - bop_vars.yml

  vars:
    is_compile: "'$compile' == 'yes'"

  tasks:
### REDHAT - TODO
    - name: Install packages
      yum: name=$item
           state=installed
      with_items:
        - java-1.6.0-openjdk
        - protobuf-compiler
        - protobuf-devel
        - protobuf-python
      when: ansible_os_family == "RedHat"
      tags:
        - packages
        - jdk

### DEBIAN
    - name: Install packages
      apt: name=$item
           state=installed
      with_items:
        - openjdk-6-jdk
        - maven
        - miniupnpc
        - protobuf-compiler
        - python-protobuf
        - libprotobuf-dev
      when: ansible_os_family == "Debian"
      tags:
        - packages
        - jdk

### COMMON
    - name: Install Bitsofproof supernode
      git: repo='git://github.com/bitsofproof/supernode.git'
           dest=/opt/supernode
      tags:
        - repo

#  - name: Install BCSAPI context


    - name: Create locahost vhost
      rabbitmq_vhost: name=localhost
                      state=present
      tags:
        - mq

    - name: Create supernode user
      rabbitmq_user: user=supernode
                     password=supernode
                     vhost=localhost
                     configure_priv=.*
                     read_priv=.*
                     write_priv=.*
                     tags=supernode
                     state=present
      tags:
        - users
        - mq

### COMPILE love for the first time
    - name: Compile supernode
      shell: 'cd /opt/supernode; mvn -X clean install'
      only_if: '$is_compile'
      tags:
        - compile

    - name: Create BOP user
      user: name=bop
            comment="Bitsofproof"
      tags:
        - users

    - name: Install log4j properties
      template: src=opt/supernode/log4j.properties.j2
                dest=/opt/supernode/log4j.properties
                owner=bop
                group=bop
                mode=0644
      notify:
        - Restart bop-supernode
      tags:
        - config
        - log

    - name: Set BOP user permissions
      file: path=/opt/supernode
            owner=bop
            group=bop
            state=directory
            recurse=yes
      tags:
        - directories

    - name: Install bitcoin service config
      template: src=etc/default/bop-supernode.j2
                dest=/etc/default/bop-supernode
                owner=bop
                group=bop
                mode=0640
      notify:
        - Restart bop-supernode
      tags:
        - config

    - name: Install BOP supernode service
      template: src=etc/init.d/bop-supernode.j2
                dest=/etc/init.d/bop-supernode
                owner=root
                group=root
                mode=0755
      tags:
        - services

    - name: Install /etc/shorewall/rules.d/bitcoin
      template: src=etc/shorewall/rules.d/bitcoin.j2
                dest=/etc/shorewall/rules.d/bitcoin
                owner=root
                group=root
                mode=0640
      tags:
        - firewall
      notify:
        - Restart shorewall

    - name: Start bop-supernode
      service: name=bop-supernode
               state=started
               enabled=yes

  handlers:
    - name: Restart bop-supernode
      service: name=bop-supernode
               state=restarted

    - name: Restart shorewall
      service: name=shorewall
               state=restarted
