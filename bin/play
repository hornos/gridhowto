#!/bin/bash
gdn=$(pwd $(dirname $0))
gbn=$(basename $0)
inventory=./hosts
config=./config

tmp=".${gbn}.$$"

function play/exit() {
  if test -r "${tmp}" ; then
    rm -f "${tmp}"
  fi
  exit 1
}
trap play/exit INT TERM EXIT

hosts=${1:-root}
shift
module=${1:-ping}
shift
opts=$*

### operators
user=${hosts/@*}
if [ ! -z "$user" ] ; then
  hosts=${hosts/${user}}
fi

if [ -z "$user" ] ; then
  user=sysop
fi

ops=""
# -k
if [ "${hosts:0:1}" = "@" ] ; then
  ops="${ops} -k"
  hosts="${hosts:1}"
  # --sudo
  if [ "${hosts:0:1}" = "@" ] ; then
    ops="${ops} --sudo"
    hosts="${hosts:1}"
  fi
fi

### common args
key=./keys/${user}
args="-u ${user} --private-key=${key} -i ${inventory} ${opts}"
cmd=""

### modules
__module=$module
if [ -r "${module}.yml" ] ; then
  module="${module}.yml"
fi

case $gbn in
  play)
    cmd="ansible-playbook ${module} -l ${hosts}"
    ;;
  show)
    cmd="ansible-playbook ${module} -l ${hosts}"
    echo ""
    echo "The following tasks will be played:"
    echo ""
    cat ${module} | egrep "name:" | sed s/.*name://
    echo ""
    read -p "Press any key to continue or Ctrl+C to exit!" pass
    ;;
  admin)
    cmd="ansible ${hosts} -m ${module}"
    ;;
  setup)
    cmd="ansible ${hosts} -m setup"
    ;;
  run)
    cmd="ansible ${hosts} -m command -a \"${module}\""
    ;;
  restart)
    cmd="ansible ${hosts} -m command -a \"service ${__module} restart\""
    ;;
  shell)
    echo "${module}" > ${tmp}
    chmod a+x ${tmp}
    cmd="ansible ${hosts} -m shell -a \"${tmp}\""
    ;;
  reboot)
    cmd="ansible ${hosts} -m command -a /sbin/reboot"
    ;;
  shutdown)
    cmd="ansible ${hosts} -m command -a \"/sbin/shutdown -h now\""
    ;;
  update)
    cmd="ansible ${hosts} -m command -a \"yum -y update\""
    ;;
  ping)
    cmd="ansible ${hosts} -m ping"
    ;;
  ssh)
    host=$(cat ${inventory} | \
    grep ${hosts} | \
    grep ansible_ssh_host | \
    sed s/.*=// | uniq)

    ssh -X ${opts} -i keys/${user} ${user}@${host}
    exit $?
    ;;
  help|*)
    help/play
    ;;
esac

if test -r ${config} ; then
  pre="ANSIBLE_CONFIG=${config}"
fi
echo "$pre $cmd $args $ops"
eval "$pre $cmd $args $ops"
