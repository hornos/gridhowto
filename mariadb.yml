# Based on: http://edin.no-ip.com/blog/hswong3i/mariadb-galera-mastermaster-replication-ubuntu-12-04-howto
#
#  --extra-vars "master=cc-01"
#
---
- hosts: all

  vars_files:
    - networks.yml
    - mariadb_vars.yml
    - [ "vars/{{ ansible_os_family }}.yml", "vars/Defaults.yml" ]

  vars:
    is_master: "'$inventory_hostname' == '$master'"

  tasks:
### REDHAT
    - name: Install MariaDB Repo
      template: src=etc/yum.repos.d/MariaDB.repo.j2
                dest=/etc/yum.repos.d/MariaDB.repo
                owner=root
                group=root
                mode=0644
      when: ansible_os_family == "RedHat"
      tags:
        - repo

    - name: Install MariaDB packages
      yum: name=$item
           state=installed
      with_items:
        - MariaDB-Galera-server
        - MariaDB-client
        - MariaDB-server
        - MariaDB-shared
        - MariaDB-compat
        - galera
      when: ansible_os_family == "RedHat"
      tags:
        - packages

### DEBIAN
    - name: Install MariaDB repo
      apt_repository: repo='deb http://mirrors.n-ix.net/mariadb/repo/5.5/ubuntu precise main'
      when: ansible_os_family == "Debian"
      tags:
        - repo

    - name: Install MariaDB packages
      apt: name=$item
           state=installed
           force=yes
      with_items:
        - mariadb-galera-server
        - galera
      when: ansible_os_family == "Debian"
      tags:
        - packages

    - name: Create /etc/my.cnf.d
      file: path=/etc/my.cnf.d
            owner=mysql
            group=mysql
            state=directory
      when: ansible_os_family == "Debian"
      tags:
        - directories

    - name: Setup /etc/init.d/mysql
      template: src=etc/init.d/mysql.j2
                dest=/etc/init.d/mysql
                owner=root
                group=root
                mode=0755
      when: ansible_os_family == "Debian"
      notify:
        - Restart mysql
      tags:
        - config


### CONFIGURATION
    - name: Create /var/run/mysql
      file: path=/var/run/mysql
            owner=mysql
            group=mysql
            state=directory
      when: ansible_os_family == "RedHat"
      tags:
        - directories

    - name: Create /var/run/mysql
      file: src=/var/run/mysqld
            dest=/var/run/mysql
            state=link
      when: ansible_os_family == "Debian"
      tags:
        - directories

    - name: Set service timeout
      lineinfile: dest=/etc/init.d/mysql
                  regexp="^service_startup_timeout"
                  line="service_startup_timeout={{mariadb.timeout}}"
      tags:
        - config

    - name: Setup /etc/my.cnf
      template: src=etc/my.cnf.j2
                dest=/etc/my.cnf
                owner=root
                group=root
                mode=0644
      notify:
        - Restart mysql
      when: ansible_os_family == "RedHat"
      tags:
        - config


### DEBIAN
    - name: Setup /etc/mysql/my.cnf
      template: src=etc/my.cnf.j2
                dest=/etc/mysql/my.cnf
                owner=root
                group=root
                mode=0644
      notify:
        - Restart mysql
      when: ansible_os_family == "Debian"
      tags:
        - config

    - name: Fix my.cnf
      file: src=/etc/mysql/my.cnf
            dest=/etc/my.cnf
            state=link
      when: ansible_os_family == "Debian"
      tags:
        - fix
        - links

    - name: Fix lib64 link
      file: src=/usr/lib
            dest=/usr/lib64
            state=link
      when: ansible_os_family == "Debian"
      tags:
        - fix
        - links


### COMMON
    - name: Setup /etc/my.cnf.d/server.cnf
      template: src=etc/my.cnf.d/server.cnf.j2
                dest=/etc/my.cnf.d/server.cnf
                owner=root
                group=root
                mode=0644
      notify:
        - Restart mysql
      tags:
        - config


### REDHAT
    - name: Setup PHP mysql socket
      lineinfile: dest=/etc/php.ini
                  regexp="^mysql.default_socket"
                  line="mysql.default_socket = {{mariadb.socket}}"
      when: ansible_os_family == "RedHat"
      notify:
        - Restart httpd
      tags:
        - config
        - php

    - name: Setup PHP mysqli socket
      lineinfile: dest=/etc/php.ini
                  regexp="^mysqli.default_socket"
                  line="mysqli.default_socket = {{mariadb.socket}}"
      when: ansible_os_family == "RedHat"
      notify:
        - Restart httpd
      tags:
        - config
        - php

### DEBIAN
    - name: Setup PHP mysql socket
      lineinfile: dest=/etc/php5/apache2/php.ini
                  regexp="^mysql.default_socket"
                  line="mysql.default_socket = {{mariadb.socket}}"
      when: ansible_os_family == "RedHat"
      notify:
        - Restart httpd
      tags:
        - config
        - php

    - name: Setup PHP mysqli socket
      lineinfile: dest=/etc/php5/apache2/php.ini
                  regexp="^mysqli.default_socket"
                  line="mysqli.default_socket = {{mariadb.socket}}"
      when: ansible_os_family == "RedHat"
      notify:
        - Restart httpd
      tags:
        - config
        - php


    - name: Start mysql
      service: name=mysql
               state=started
               enabled=yes
      tags:
        - start

  handlers:
    - name: Restart mysql
      service: name={{service_mysql}}
               state=restarted

    - name: Restart httpd
      service: name={{service_httpd}}
               state=restarted


# mysql -e "SET wsrep_on = OFF; DELETE FROM mysql.user WHERE user = '';"
# mysql -e "SET wsrep_on = OFF; GRANT ALL ON *.* TO 'root'@'%' IDENTIFIED BY 'password';"
# mysql -e "SHOW STATUS LIKE 'wsrep_%';"
