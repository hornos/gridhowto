### XtreemFS Metadata

# optional debug level
# 0: emergency
# 1: alert
# 2: critical
# 3: error
# 4: warning
# 5: notice
# 6: info (default)
# 7: debug
#debug.level = 6

# optional debug categories - a space or comma-separated list of log message categories
# all (default) - enable logging for all categories
# lifecycle     - log messaages pertaining to service lifecycles (threads)
# buffer        - logs messages pertaining to buffers
# net           - network-related log messages
# auth          - authorization-related log messages
# stage         - log messages pertaining to the request flow through the stages
# proc          - log messages pertaining to any kind of request processing
# db            - log messages pertaining storage on OSD or database access on MRC/DIR
# replication   - logs messages pertaining to replication 
# misc          - any other log messages
#debug.categories = all

# port for the service to listen on
listen.port = 32636

# port for the status page (HTTP server)
http_port = 30636

# optional address for network device, "any" if not specified
listen.address = {{ansible_eth0.ipv4.address}}

# optinal host name that is used to register the service at the DIR
hostname = {{inventory_hostname}}

# interval for querying the Directory Service for new OSDs (in s)
osd_check_interval = 10

# Directory Service endpoint
dir_service.host = {{inventory_hostname}}
dir_service.port = 32638
# If you run a replicated DIR, you also have to set the addresses of the additional DIR replicas here:
dir_service1.host = {{xtreem_dir_replica_1}}
dir_service1.port = 32638
dir_service2.host = {{xtreem_dir_replica_2}}
dir_service2.port = 32638

# specify whether access time stamps are updated
no_atime = true

# granularity of the local clock (in ms) (0 disables it to always use the current system time)
local_clock_renewal = 0

# interval between two remote clock syncs (in ms)
remote_time_sync = 60000

# specify whether SSL is required
ssl.enabled = false

# server credentials for SSL handshakes
ssl.service_creds = /etc/xos/xtreemfs/truststore/certs/mrc.p12
ssl.service_creds.pw = passphrase
ssl.service_creds.container = pkcs12
#ssl.trust_manager = org.xtreemfs.auth.plugin.SSLX509TrustManager

# trusted certificates for SSL handshakes
ssl.trusted_certs = /etc/xos/xtreemfs/truststore/certs/trusted.jks
ssl.trusted_certs.pw = jks_passphrase
ssl.trusted_certs.container = jks

# Enables the Grid SSL mode. This mode uses SSL only for user authentication
# and sends all data via an unencrypted TCP connection. 
#ssl.grid_ssl = false

# Authentication providers are used to retrieve the user identities
# from the client or from certificate.
# The default provider is org.xtreemfs.common.auth.NullAuthProvider, which just
# takes the information provided by the client. The name of a pluggable
# provider can be used here.
authentication_provider = org.xtreemfs.common.auth.NullAuthProvider

# Optional directory containing deployable policy implementations.
# Policies can be directly deployed as .java or .class files in this directory
# or one of its subdirectories. They will be compiled at startup time and
# loaded at runtime. Policies may have external dependencies that can be
# deployed either as .java, .class or .jar files. While Java and Class files
# may be located in subdirectories, JAR files mustn't. So far, pluggable
# policies have to inherit from either org.xtreemfs.mrc.ac.FileAccessPolicy,
# org.xtreemfs.mrc.osdstatus.OSDSelectionPolicy,
# org.xtreemfs.common.auth.AuthenticationProvider, or javax.ssl.TrustManager.
# Policies identified by policy IDs (OSDSelectionPolicy and FileAccessPolicy)
# require a public static long field called POLICY_ID that assigns the policy
# a unique number.
policy_dir = /etc/xos/xtreemfs/policies

# Shared secret between the MRC and all OSDs.
# The secret is used by the MRC to sign capabilities, i.e. security tokens for
# data access at OSDs. In turn, an OSD uses the secret to verify that the
# capability has been issued by the MRC. The shared secret will be replaced by
# a public key infrastructure in future releases.
capability_secret = {{xtreem_secret}}

# validity time span for capabilities in seconds
#capability_timeout = 600

# administrator password for privileged operations
admin_password = {{xtreem_admin_password}}

# If you want to monitor your XtreemFS installation through SNMP 
# uncomment the following lines. You have to set snmp.enabled = true
# and provide a listen port and optional a address. Also optional 
# is a path to an aclfile which controls which hosts can access the
# monitoring information via SNMP.
snmp.enabled = true
snmp.address = localhost
snmp.port = 34636
snmp.aclfile = /etc/xos/xtreemfs/snmp.acl

#####################################################################
# BabuDB configuration												#
#####################################################################

# optional debug level (
# 0 = emergency, 
# 1 = alert, 
# 2 = critical, 
# 3 = error, 
# 4 = warning, 
# 5 = notice, 
# 6 = info, 
# 7 = debug)
babudb.debug.level = 4

# optional debug category
#babudb.debug.category = all

# name for the database configuration file
#babudb.cfgFile = config.db

# base directory to store database index snapshots in
babudb.baseDir = /var/lib/xtreemfs/mrc/database

# directory in which the database logs are stored
babudb.logDir = /var/lib/xtreemfs/mrc/db-log

# SyncMode the synchronization mode to use for the logFile
# ASYNC - asynchronously write log entries (data is lost when system crashes).
# FSYNC - executes an fsync on the logfile before acknowledging the operation.
# FDATASYNC
# SYNC_WRITE - synchronously writes the log entry to disk before ack. Does not
#			   update the metadata.
# SYNC_WRITE_METADATA - synchronously writes the log entry to disk and updates
#			   			the metadata before ack.
# babudb.sync = ASYNC
babudb.sync = FDATASYNC

# max queue length: if > 0, the queue for each worker is limited to maxQ
babudb.worker.maxQueueLength = 250

# number of worker threads to use
babudb.worker.numThreads = 0

# a checkpoint is generated, if maxLogfileSize is exceeded
babudb.maxLogfileSize = 16777216

# interval between two checks in seconds, 0 disables auto checkPointing
babudb.checkInterval = 300

# if set to a value > 0, operations are acknowledged immediately before
# they are written to the disk log. The disk logger will do batch writes
# and call fSync... every pseudoSyncWait seconds. This can be used to
# increase performance and emulate PostgreSQL behavior.
babudb.pseudoSyncWait = 0

# flag that determines whether the indices shall be compressed or not.
#babudb.compression = false

# maximum number of key-value pairs per block
#babudb.maxNumRecordsPerBlock = 16

# maximum size for a babudb on-disk index file
#babudb.maxBlockFileSize = 52428800

# Uncomment this line if you want to enable the MRC replication. The path points
# to the database replication configuration. Place here the hostnames of all replicas.
#
# Please note, if you replicate the MRC you have to change the option
# "babudb.sync" in this file from ASYNC to a synchronous one e.g., FDATASYNC.
babudb.plugin.0 = /etc/xos/xtreemfs/server-repl-plugin/mrc.properties


# The UUID is the globally unique name of this service.
# You must not change the UUID once the service has been used
# to change the address/hostname or port of a service please
# change the UUID Mapping in the directory service.
uuid = {{xtreem_mrc_uuid}}
